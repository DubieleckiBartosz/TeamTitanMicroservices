version: '3.4'

services:

  ocelot-service:
    build:
      context: .
      dockerfile: src/ApiGateway/Titan.OcelotGateway/Dockerfile 
    container_name: ocelotapi
    environment:
      - Container_ENV=Development  
    depends_on:
        - management-service
        - calculator-service
        - identity-service 
        - general-service
    ports:
      - "8010:80"
    networks:
        - team-titan-microservice-network 

  management-service: 
    build:
      context: .
      dockerfile: src/Services/Management/Management.API/Dockerfile 
    container_name: managementapi
    env_file:
      - .env
    environment: 
      - ASPNETCORE_ENVIRONMENT=${TEST_ENV} 
      - ConnectionStrings__DefaultManagementConnection=${MANAGEMENT_MSSLQ_CONNECTION_ENV}
      - ConnectionStrings__HangfireConnection=${HANGFIRE_CONNECTION_ENV}
      - StoreOptions__ConnectionString=${MONGO_STORE_ENV} 
      - RabbitOptions__Host=${RABBIT_CONNECTION_ENV}
      - RabbitOptions__Port=${RABBIT_PORT_ENV}
      - EmailOptions__Host=${SMTP_HOST_ENV}
      - LinkOptions__Uri=${LINK_URI_ENV}
    ports:
      - "8011:80"
    networks:
        - team-titan-microservice-network
    depends_on:
      - mssql
      - mongo
      - seq
      - messages

  calculator-service: 
    build:
      context: .
      dockerfile: src/Services/Calculator/Calculator.API/Dockerfile 
    container_name: calculatorapi
    env_file:
      - .env
    environment: 
      - ASPNETCORE_ENVIRONMENT=${TEST_ENV} 
      - ConnectionStrings__DefaultCalculatorConnection=${CALCULATOR_MSSLQ_CONNECTION_ENV}
      - ConnectionStrings__HangfireConnection=${HANGFIRE_CONNECTION_ENV}
      - RabbitOptions__Host=${RABBIT_CONNECTION_ENV}
      - RabbitOptions__Port=${RABBIT_PORT_ENV}
      - StoreOptions__ConnectionString=${MONGO_STORE_ENV} 
    ports:
      - "8012:80"
    networks:
        - team-titan-microservice-network
    depends_on:
      - mssql
      - mongo
      - seq
      - messages

  identity-service: 
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile 
    container_name: identityapi
    env_file:
      - .env
    environment: 
      - ASPNETCORE_ENVIRONMENT=${TEST_ENV} 
      - EmailOptions__Host=${SMTP_HOST_ENV}
      - ConnectionStrings__DefaultConnection=${IDENTITY_MSSQL_CONNECTION_ENV}
      - ConnectionStrings__HangfireConnection=${HANGFIRE_CONNECTION_ENV}
    ports:
      - "8013:80"
    networks:
        - team-titan-microservice-network
    depends_on: 
      - seq 
      - mssql
      - teamtitansmtp

  general-service: 
    build:
      context: .
      dockerfile: src/Services/General/General.API/Dockerfile 
    container_name: generalapi
    env_file:
      - .env
    environment: 
      - ASPNETCORE_ENVIRONMENT=${TEST_ENV}  
      - ConnectionStrings__DefaultGeneralConnection=${GENERAL_MSSLQ_CONNECTION_ENV} 
      - ConnectionStrings:DefaultGeneralConnection=${GENERAL_MSSLQ_CONNECTION_ENV} 
    ports:
      - "8014:80"
    networks:
        - team-titan-microservice-network
    depends_on: 
      - seq 
      - mssql